{"ast":null,"code":"var _jsxFileName = \"/Users/jeon/Desktop/react/react-p/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      temperature: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    });\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Enter temperature in Celsius:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(temperature)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["/Users/jeon/Desktop/react/react-p/src/index.js"],"names":["React","ReactDOM","BoilingVerdict","props","celsius","Calculator","Component","constructor","handleChange","bind","state","temperature","e","setState","target","value","render","parseFloat","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KALQF,c;;AAOT,MAAMG,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACH;;AAEDH,EAAAA,YAAY,CAACI,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AAACF,MAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAML,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,KAAK,EAAEA,WADX;AAEI,QAAA,QAAQ,EAAE,KAAKH;AAFnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,cAAD;AACI,QAAA,OAAO,EAAES,UAAU,CAACN,WAAD;AADvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAvBoC;;AA0BzCV,QAAQ,CAACe,MAAT,eACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n        return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {temperature: ''};\n    }\n\n    handleChange(e) {\n        this.setState({temperature: e.target.value});\n    }\n\n    render() {\n        const temperature = this.state.temperature;\n        return (\n            <fieldset>\n                <legend>Enter temperature in Celsius:</legend>\n                <input\n                    value={temperature}\n                    onChange={this.handleChange} />\n                <BoilingVerdict\n                    celsius={parseFloat(temperature)} />\n            </fieldset>\n        );\n    }\n}\n\nReactDOM.render(\n    <Calculator />,\n    document.getElementById('root')\n  );"]},"metadata":{},"sourceType":"module"}