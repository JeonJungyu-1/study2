{"ast":null,"code":"var _jsxFileName = \"/Users/jeon/Desktop/react/react-p/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      temperature: ''\n    };\n  }\n\n  handleChange(e) {\n    // this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Enter temperature in \", scaleNames[scale], \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale == 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale == 'c' ? tryConvert(temperature, toF) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["/Users/jeon/Desktop/react/react-p/src/index.js"],"names":["React","ReactDOM","scaleNames","c","f","TemperatureInput","Component","constructor","props","handleChange","bind","state","temperature","e","onTemperatureChange","target","value","render","scale","BoilingVerdict","celsius","Calculator","handleCelsiusChange","handleFahrenheitChange","setState","tryConvert","toCelsius","fahrenheit","toF","toFahrenheit","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst scaleNames = {\n    c: 'Celsius',\n    f: 'Fahrenheit'\n};\n\nclass TemperatureInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {temperature: ''};\n    }\n\n    handleChange(e) {\n        // this.setState({temperature: e.target.value});\n        this.props.onTemperatureChange(e.target.value);\n    }\n\n    render() {\n        const temperature = this.props.temperature;\n        const scale = this.props.scale;\n        return (\n            <fieldset>\n                <legend>Enter temperature in {scaleNames[scale]}:</legend>\n                <input \n                    value={temperature}\n                    onChange={this.handleChange} />\n            </fieldset>\n        );\n    }\n}\n\n\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n        return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n        this.state = {temperature: '', scale: 'c'};\n    }\n\n    handleCelsiusChange(temperature) {\n        this.setState({scale: 'c', temperature});\n    }\n    \n    handleFahrenheitChange(temperature) {\n        this.setState({scale: 'f', temperature});\n    }\n\n    render() {\n        const scale = this.state.scale;\n        const temperature = this.state.temperature;\n        const celsius = scale == 'f' ? tryConvert(temperature, toCelsius) : temperature;\n        const fahrenheit = scale == 'c' ? tryConvert(temperature, toF) : temperature;\n        return (\n            <div>\n                <TemperatureInput scale='c' />\n                <TemperatureInput scale='f' />\n            </div>\n        );\n    }\n}\n\nfunction toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n    return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\n\nReactDOM.render(\n    <Calculator />,\n    document.getElementById('root')\n  );"]},"metadata":{},"sourceType":"module"}